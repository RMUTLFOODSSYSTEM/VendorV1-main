import { useState } from "react";
import { useNavigate, Link } from "react-router-dom";
import { Container, Row, Col, Card, Form, Button, FloatingLabel, Alert } from "react-bootstrap";

export default function Login({ onLogin }) {
  const [form, setForm] = useState({ email: "", password: "" });
  const [err, setErr] = useState("");
  const nav = useNavigate();

  const onChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });

  const onSubmit = (e) => {
    e.preventDefault();
    setErr("");

    if (!form.email || !form.password) {
      setErr("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô");
      return;
    }

    // TODO: ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏à‡∏£‡∏¥‡∏á (‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ mock ‡πÉ‡∏´‡πâ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÑ‡∏î‡πâ‡∏´‡∏°‡∏î)
    localStorage.setItem("userEmail", form.email);
    localStorage.setItem("role", "vendor");   // üü¢ ‡∏ö‡∏≠‡∏Å‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤
    onLogin?.(form.email);                    // üü¢ ‡πÅ‡∏à‡πâ‡∏á App ‡πÉ‡∏´‡πâ authed = true
    nav("/vendor/menu");                      // üü¢ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏°‡∏ô‡∏π‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤
  };

  return (
    <Container className="py-4 py-md-5">
      <Row className="justify-content-center">
        <Col xs={12} sm={10} md={8} lg={5}>
          <Card className="border-0 rounded-4 shadow-sm">
            <Card.Body className="p-4 p-md-5">
              <h1 className="h3 fw-bold text-center mb-4">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö (‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤)</h1>

              {err && <Alert variant="danger" className="py-2">{err}</Alert>}

              <Form noValidate onSubmit={onSubmit}>
                <FloatingLabel controlId="email" label="‡∏≠‡∏µ‡πÄ‡∏°‡∏•" className="mb-3">
                  <Form.Control
                    type="email"
                    name="email"
                    value={form.email}
                    onChange={onChange}
                    placeholder="you@example.com"
                    size="lg"
                    required
                  />
                </FloatingLabel>

                <FloatingLabel controlId="password" label="‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô" className="mb-2">
                  <Form.Control
                    type="password"
                    name="password"
                    value={form.password}
                    onChange={onChange}
                    placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                    size="lg"
                    required
                    minLength={6}
                  />
                </FloatingLabel>

                <div className="d-flex justify-content-end mb-3">
                  {/* üü¢ ‡πÉ‡∏ä‡πâ Link ‡πÅ‡∏•‡∏∞‡πÑ‡∏õ path ‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤ */}
                  <Link className="small text-decoration-none" to="/vendor/forgot-password">
                    ‡∏•‡∏∑‡∏°‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô?
                  </Link>
                </div>

                <Button type="submit" variant="success" size="lg" className="w-100 rounded-pill">
                  ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
                </Button>
              </Form>

              <div className="text-center mt-3">
                ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ? <Link to="/vendor/register">‡∏™‡∏°‡∏±‡∏Ñ‡∏£(‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤)</Link>
              </div>
            </Card.Body>
          </Card>
        </Col>
      </Row>
    </Container>
  );
}
